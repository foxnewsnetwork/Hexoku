defmodule Hexoku.API.Apps do
	alias Hexoku.Request
	@moduledoc """
	An app represents the program that you would like to deploy and run on Heroku.

	## Attributes
	<dl>
		<dt>id</dt> <dd>unique identifier of app generated by Heroku</dd>
		<dt>name</dt> <dd>unique name of app provided by the user</dd>
		<dt>build_stack:id</dt> <dd>unique identifier of stack</dd>
		<dt>build_stack:name</dt> <dd>unique name of stack</dd>
		<dt>buildpack_provided_description</dt> <dd>description from buildpack of app</dd>
		<dt>git_url</dt> <dd>git repo URL of app</dd>
		<dt>maintenance</dt> <dd>maintenance status of app</dd>
		<dt>owner:email</dt> <dd>email address of account</dd>
		<dt>owner:id</dt> <dd>unique identifier of owner</dd>
		<dt>region:id</dt> <dd>unique identifier of region</dd>
		<dt>region:name</dt> <dd>unique name of region</dd>
		<dt>repo_size</dt> <dd>git repo size in bytes of app</dd>
		<dt>slug_size</dt> <dd>slug size in bytes of app</dd>
		<dt>stack:id</dt> <dd>unique identifier of stack</dd>
		<dt>stack:name</dt> <dd>unique name of stack</dd>
		<dt>web_url</dt> <dd>web URL of app</dd>
		<dt>archived_at</dt> <dd>when app was archived</dd>
		<dt>released_at</dt> <dd>when app was released</dd>
		<dt>created_at</dt> <dd>when app was created</dd>
		<dt>updated_at</dt> <dd>when app was last modified</dd>
	</dl>

	For more info read the [Heroku API Reference](https://devcenter.heroku.com/articles/platform-api-reference#app)
	"""

	@doc """
	List existing apps.

	## Examples
		client |> Hexoku.API.Apps.list()
	"""
	@spec list(Hexoku.Client.t) :: [Map.t]
	def list(client), do: Request.get(client, "/apps")

	@doc """
	Info for existing app.

	## Examples
		client |> Hexoku.API.Apps.info("myapp")
	"""
	@spec info(Hexoku.Client.t, binary) :: Map.t
	def info(client, app), do: Request.get(client, "/apps/#{app}")

	@doc """
	Helper to create a new app.

	## Examples
		client |> Hexoku.API.Apps.create("myapp", "eu", "cedar")
	"""
	@spec create(Hexoku.Client.t, binary, binary, binary) :: Hexoku.Response.t
	def create(client, name, region, stack \\ "cedar") do
		Request.post(client, "/apps", %{
			name: name,
			stack: stack,
			region: region
		})
	end

	@doc """
	Create a new app.

	## Payload Attributes
	<dl>
		<dt>name</dt> <dd>name of app</dd>
		<dt>region</dt> <dd>unique identifier or name of region</dd>
		<dt>stack</dt> <dd>unique identifier or name of stack</dd>
	</dl>

	## Examples
		client |> Hexoku.API.Apps.create(%{name: "myapp"})
	"""
	@spec create(Hexoku.Client.t, Map.t) :: Hexoku.Response.t
	def create(client, payload), do: Request.post(client, "/apps", payload)

	@doc """
	Delete an existing app.

	## Examples
		client |> Hexoku.API.Apps.delete("myapp")
	"""
	@spec delete(Hexoku.Client.t, binary) :: Hexoku.Response.t
	def delete(client, app), do: Request.delete(client, "/apps/#{app}")

	# TODO: App Update


end
