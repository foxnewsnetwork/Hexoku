defmodule Hexoku.API.LogDrains do
	alias Hexoku.Request
	@moduledoc """
	Log drains provide a way to forward your Heroku logs to an external syslog server for long-term archiving.
	This external service must be configured to receive syslog packets from Heroku, whereupon its URL can be added to an
	app using this API.

	## Attributes
	<dl>
		<dt>id</dt> <dd>unique identifier of item generated by Heroku</dd>
		<dt>addon</dt> <dd>addon that created the drain</dd>
		<dt>addon:id</dt> <dd>unique identifier of add-on</dd>
		<dt>token</dt> <dd>token associated with the log drain</dd>
		<dt>url</dt> <dd>url associated with the log drain</dd>
		<dt>created_at</dt> <dd>when item was created</dd>
		<dt>updated_at</dt> <dd>when item was last modified</dd>
	</dl>

	For more info read the [Heroku API Reference](https://devcenter.heroku.com/articles/platform-api-reference#log-drain)
	"""

	@doc """
	List existing log drains.

	## Examples
		client |> Hexoku.API.LogDrains.list("myapp")
	"""
	@spec list(Hexoku.Client.t, binary) :: [Map.t]
	def list(client, app), do: Request.get(client, "/apps/#{app}/log-drains")

	@doc """
	Info for existing log drain.

	## Examples
		client |> Hexoku.API.LogDrains.info("myapp", "01234567-89ab-cdef-0123-456789abcdef")
	"""
	@spec info(Hexoku.Client.t, binary, binary) :: Map.t
	def info(client, app, drain), do: Request.get(client, "/apps/#{app}/log-drains/#{drain}")

	@doc """
	Create a new log drain.

	## Examples
		client |> Hexoku.API.LogDrains.create("myapp", "syslog://1234")
	"""
	@spec create(Hexoku.Client.t, binary, binary) :: Map.t
	def create(client, app, url), do: Request.post(client, "/apps/#{app}/log-drains", %{url: url})

	@doc """
	Delete an existing log drain. Log drains added by add-ons can only be removed by removing the add-on.

	## Examples
		client |> Hexoku.API.LogDrains.delete("myapp", "01234567-89ab-cdef-0123-456789abcdef")
	"""
	@spec delete(Hexoku.Client.t, binary, binary) :: Map.t
	def delete(client, app, drain), do: Request.delete(client, "/apps/#{app}/log-drains/#{drain}")


end
